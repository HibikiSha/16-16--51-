/*-----------------------------------------------
  名称：16x16汉字屏流动显示
  论坛：www.doflye.net
  编写：shifang
  日期：2009.5
  修改：无
  硬件：LY-51S V4.0 单片机开发板
  内容：
        P1.0-P1.3分别连接A、B、C、D，用于控制16行，通过2路HC138控制
		SER接P1.4 通过2片HC595控制
        CLK时钟连接P1.5
        LAT锁存连接P1.6
		OE接P1.7

  现象：使用普通速度51系列单片机。1个汉字显示屏，向左流动显示多个汉字，重复循环显示。
------------------------------------------------*/
#include<reg52.h>

sbit J32_LAT = P1^6;       //锁存引脚
sbit J32_SER = P1^4;       //数据引脚
sbit J32_CLK = P1^5;       //时钟引脚
sbit J32_OE  = P1^7;       //使能引脚
sbit J37_LAT = P1^3;       //锁存引脚
sbit J37_SER = P1^1;       //数据引脚
sbit J37_CLK = P1^2;       //时钟引脚
unsigned char MoveBitNum,MoveBitNumtemp,IncNum;//移动位数,临时移动位数，大于一个字节增加字节数
unsigned int HzNum;//汉字个数
unsigned char buff[10];

/*-----------------------------------------------
             16x16汉字取模数据
------------------------------------------------*/
unsigned char code hztest[][32]=    //取模选择字节正序
{


	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, //前面一屏大小的空字符，不显示，这里根据屏的大小修改，这个是1个汉字屏
	//所以写入1个汉字
	/*--  文字:  我  --*/
/*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
0x04,0x40,0x0E,0x50,0x78,0x48,0x08,0x48,0x08,0x40,0xFF,0xFE,0x08,0x40,0x08,0x44,
0x0A,0x44,0x0C,0x48,0x18,0x30,0x68,0x22,0x08,0x52,0x08,0x8A,0x2B,0x06,0x10,0x02,

/*--  文字:  爱  --*/
/*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
0x00,0x08,0x01,0xFC,0x7E,0x10,0x22,0x10,0x11,0x20,0x7F,0xFE,0x42,0x02,0x82,0x04,
0x7F,0xF8,0x04,0x00,0x07,0xF0,0x0A,0x10,0x11,0x20,0x20,0xC0,0x43,0x30,0x1C,0x0E,

/*--  文字:  你  --*/
/*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
0x08,0x80,0x08,0x80,0x08,0x80,0x11,0xFE,0x11,0x02,0x32,0x04,0x34,0x20,0x50,0x20,
0x91,0x28,0x11,0x24,0x12,0x24,0x12,0x22,0x14,0x22,0x10,0x20,0x10,0xA0,0x10,0x40,

/*--  文字:  三  --*/
/*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
0x00,0x00,0x00,0x00,0x7F,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xF8,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFE,0x00,0x00,0x00,0x00,

/*--  文字:  千  --*/
/*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
0x00,0x10,0x00,0xF8,0x3F,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0xFF,0xFE,
0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,

/*--  文字:  遍  --*/
/*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
0x00,0x80,0x20,0x40,0x13,0xFC,0x12,0x04,0x02,0x04,0x03,0xFC,0xF2,0x00,0x13,0xFC,
0x13,0x54,0x15,0x54,0x15,0xFC,0x19,0x54,0x11,0x44,0x11,0x0C,0x28,0x00,0x47,0xFE,





////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, //尾部的一屏的空字符，用于清屏，参数和屏大小有关。
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,


};

unsigned char code a[]={0xfe,0xfd,0xfb,0xf7,0xef,0xdf,0xbf,0x7f};


/*-----------------------------------------------
             向595写入一个字节 单红色
------------------------------------------------*/
void InputByte( unsigned  char DataR1) //写一个字节
{
	unsigned  char i;
	for(i=8; i>0; i--)
	{
		J32_SER = (DataR1&0x01);
		J32_CLK = 0;
		J32_CLK = 1;
		DataR1 = DataR1 >> 1;
	}
}

void Input2Byte(unsigned char dat1,unsigned char dat2)
{
	unsigned  char i;
	for(i=8; i>0; i--)
	{
		J37_SER = (dat1&0x01);
		J37_CLK = 0;
		J37_CLK = 1;
		dat1 = dat1 >> 1;
	}
	for(i=8; i>0; i--)
	{
		J37_SER = (dat2&0x01);
		J37_CLK = 0;
		J37_CLK = 1;
		dat2 = dat2 >> 1;
	}
}

/*-----------------------------------------------
                    延时程序
------------------------------------------------*/
void Delay(unsigned int t)
{
	while(--t);
}


/*-----------------------------------------------
                      主程序
------------------------------------------------*/
main()
{
	unsigned char count;//16行扫描数据，范围0-15
	unsigned int i, j;
	unsigned char temp;
	//计算数组的元素个数，最终需要的是汉字的个数
	int lenTotal = sizeof(hztest) / sizeof(int);  //所有
	int lenLow = sizeof(hztest[0]) / sizeof(int);  //低位
	int lenHigh = lenTotal / lenLow;  //高位

	while(1)
	{
		i++;
		if(i==180)//更改流动速度,1T单片机和12T单片机速度大约5-8倍，注意更改参数
		{
			i=0;
			MoveBitNum++;
			if(MoveBitNum==16)//每次移动完一个汉字大小后循环
			{
				MoveBitNum=0;
				HzNum+=1;    //调用下一个汉字
				if(HzNum>=lenHigh-1)//需要显示的汉字个数，包括前面的一屏空字符的个数，后面清屏的空字符不包含在内,这里是(汉字个数+1)
					HzNum=0;   //完全显示完后循环调用
			}
		}


		Delay(1);//控制扫描频率
		//读取汉字对应屏幕缓冲区的数据，不同大小的屏幕不一样
		for(j=0; j<2; j++) //取每个汉字的前2个字节，
		{
			//汉字个数+1
			buff[j+j+1]=hztest[HzNum+j][count+count+1];  //每次移动完一个汉字后，选择下一个汉字
			buff[j+j]=hztest[HzNum+j][count+count];

		}
		//判断移动的位数
		if(MoveBitNum<8)                   //  判读移动距离是大于一个字节还是小于一个字节，因为一个字节左移右移最大只能8位
		{
			IncNum=0;
			MoveBitNumtemp=MoveBitNum;
		}
		else
		{
			IncNum=1;    //大于8就减去8得到的数值还是小于8
			MoveBitNumtemp=MoveBitNum-8;
		}
		J32_LAT=0;       //锁存无效
		J37_LAT=0;
				if(count<8)
					{
						Input2Byte(a[count],0xff);

					}
					else
					{
						Input2Byte(0xff,a[count-8]);
					}
		J37_LAT = 1;
		J37_LAT=0;
		for(j=2; j>0; j--)        //按bit的方式移动缓冲区的内容，然后输出到595，即取出的数值每个字节左移一定的位数，
		{
			//后面左移出的数据整合到前面的字节中，保持数据的连续性
			temp=(buff[j-1+IncNum]<<MoveBitNumtemp)|(buff[j+IncNum]>>(8-MoveBitNumtemp));
			InputByte(temp);//输出到595
		}//8个字节传输完锁存输出
		//控制使能端
		J32_OE  = 1;
		J32_LAT=1;      //锁存有效，此时一行的数据显示到屏上
		J32_OE = 0;
		count++;
		if(count==16)
			count=0;
	}
}